05. 30. 필기

학습목표
1. 생성자를 알아보자.
2. 접근제한자를 알아보자.
3.
4.
***********************************

String class의 format메소드: printf와 동일한 문법으로, 서식대로 String값을 반환

ex: return String.format("%02d", year%100);		// 연도를 끝 두자리수만 표현하여 리턴



******************************

Scanner sc=new Scanner(System.in);
필드 초기화. 생성자(constructor)
기본 생성자. 기본값으로 초기화.
기본값: 정수형, 문자형은 0, 실수형은 0.0, 논리형은 false, 참조형은 null
필드 초기화 // 

생성자를 지정하는 순간 기본생성자로 필드초기화를 할 수 없음. 기본생성자는 생성자가 없을때만 만들어지기 때문에 생성자를 따로 만들고 기본생성자도 쓰고 싶다면 기본생성자 메소드를 명시적으로 적어서 넣어줘야 함.

생성자 지정, 초기화 하는 도중 일반적인 문장출력 등도 가능함.

this() 예약어: 컴파일러가 메소드 시그니처를 보고 적절한 생성자를 호출. 다른 생성자를 호출하는 문장은 생성자의 맨 첫번째 문장. 생성자 중에서도 파라미터의 타입, 순서, 갯수가 일치하는 것을 가져옴. 생성자 메소드의 첫줄에서 사용하여야 함!

this = 자기자신을 호출. 용도가 여러개임. 자기참조일 경우 붙지만 경우에 따라 생략할 수 있음.
this() = 자기자신 중에서도 생성자를 호출


****************************

public, private, 등등

private: 자기 자신의 클래스 안에서만 변경할 수 있음. 밖에서는 볼 수 없게 숨겨둠. 바깥에서는 보지 않아도 되는 정보를 넣어 보안을 꾀해볼 수 있음. 외부에서 접근, 출력할 수 있게 메소드를 만드는 건 가능.
외부에서 접근, 출력할 수 있게 만드는 메소드를 관례적으로 다음과 같이 부름
setter 설정자
getter 접근자

캡슐화+추상화
정보를 내부에서 보호할 수 있게끔 감춰놓는 것.(캡슐화)
사용자 입장에서 정보를 못보게 숨겨놓는 것 (추상화)
이게맞나 ....?

잉 놓쳤당