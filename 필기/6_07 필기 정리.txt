6_07

학습목표

1. package를 알아보자.
2. 배열을 알아보자.

**************************

1. 패키지
package: 관련있는 클래스, 인터페이스들을 묶은 폴더. 디렉토리. 파일을 정리하기에 용이하고 이름이 충돌하는 것을 막으며 접근을 제어한다.



패키지 생성:
패키지의 이름을 정한 후 소스코드의 첫줄에 패키지 선언. 패키지에 넣고 싶은 모든 소스파일의 첫번째 줄에 

package first; 

와 같은 문장을 사용하면 됨.
패키지 선언을 안하거나 패키지 이름이 틀리면 컴파일에러가 남.
패키지 안에 패키지를 만드는 것도 가능. 내부로 들어갈때는 .을 씀.
ex) package first.second;

패키지 문을 사용하지 않은 경우에는 디폴트 패키지에 속하게 됨.

패키지 이름 규칙: 모든 글자를 소문자로 적음.

패키지 이름으로 인터넷 도메인 이름의 역순을 사용하는 것이 관례.



패키지 불러오기:

-클래스의 완전한 이름을 써주어 참조: 자주 사용하는 클래스는 이 방식이 읽고 입력하기에 불편함.

ex) java.util.Scanner sc=new java.util.Scanner(System.in);

-패키지 멤버를 import: 외부 패키지의 특정한 클래스만을 import한다. 외부 패키지의 특정한 클래스만을 쓸 때 사용.
ex) import java.util.Scanner;

-전체 패키지를 import: 외부 패키지 내부의 많은 클래스를 사용할 때 전체를 선택하는 특수문자(*) 를 사용하여 패키지 내의 전체 클래스를 불러옴.

ex) import java.util.*;



주의점:
- 타 패키지의 필드를 쓸 때는 접근제한자가 public인 것만 쓸 수 있음. package, private는 getter/setter를 써야 함.

- 패키지가 계층적으로 구성되어 있을 때, *로 상위 패키지를 전체 import 했다고 하위패키지까지 몽땅 import하는 것이 아님. *는 패키지 안의 모든 '클래스'만 import. 하위 패키지를 import하고 싶을 땐 import문을 다시 써줘야 함.



자바에서 기본적으로 지원하는 패키지에 대해서는 자바 오라클문서를 참조.


*****************************************************************************8
2. 배열
배열이란?

여러개의 변수를 하나의 이름 아래에 둔 일종의 데이터 집합. 배열의 선언은 참조형 인스턴스의 선언과 같이 이루어짐. 


문법: 

자료형[] 이름= new 자료형[갯수]
혹은 자료형[] 이름={데이터1, 데이터2, 데이터3, 데이터4}
ex) int[] Array = new int[6] // 데이터 갯수(=크기)가 6개인 배열 Array.
ex) char[] Array2 = {h, e, l, l, o} // 배열의 크기가 5인 배열 Array2.

배열의 개별 데이터는 0부터 인덱스값을 가짐. 일례로, 데이터 갯수가 6개인 배열 Array는 Array[0] ~ Array[5] 까지 6개의 변수를 가짐.

배열의 크기값은 final 상수. 변경할 수 없음.

배열이 반복문을 만나면 폭발적인 시너지를 냄!

배열의 메소드:
Arrays.toString(): 배열을 문자열로 출력
.length: 배열의 크기를 출력 (배열의 인덱스는 0 ~ length-1 까지 존재)
